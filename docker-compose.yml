services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: liquidata-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: liquidata
    ports:
      - "${MONGO_PORT:-27017}:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - liquidata-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NODE_ENV: ${NODE_ENV:-production}
    container_name: liquidata-backend
    restart: unless-stopped
    ports:
      - "${PORT:-5000}:5000"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=5000
      - MONGODB_URI=${MONGODB_URI:-mongodb+srv://myliquidata:myliquidata@liquidata-backend.pje93kc.mongodb.net/?retryWrites=true&w=majority&appName=liquidata-backend}
      - JWT_SECRET=${JWT_SECRET:-default-secret-change-in-production}
      - ADMIN_EMAIL=${ADMIN_EMAIL:-admin@liquidata.com}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin123}
    volumes:
      # In development mode, mount the entire source code for hot reload
      # In production, only mount the uploads directory
      - ${SOURCE_MOUNT:-.}:${DEST_MOUNT:-/app/public/uploads}
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - liquidata-network
    # Override command for development
    command: ${START_COMMAND:-node server.js}
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/api/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 40s

volumes:
  mongodb_data:
    driver: local

networks:
  liquidata-network:
    driver: bridge

